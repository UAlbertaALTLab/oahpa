!!!Implementering og installering av kildefiler i smeOahpa

!!Oversikt og rekkefølge i implementeringsarbeidet
! Numra 
# implementere funksjoner som allerede finnes i smeOahpa
# implementere klokka
# implementere datoer

! Leksikonfiler for Leksa, MorfaS, MorfaC og Vasta
Bøyningsparadigme trenges ikke for Leksa, men for de andre programmene. Filene er utvidet med flere lemmaer, og ikke alle er i fst enda, og dermed får man ikke paradigme. I l-elementet mangler fremdeles en del attributter for morfologisk hjelpefunksjon, og det kommer etterhvert. Filene skal man likevel kunne implementere.
* Skal genereres bøyningsparadigme (bare fra smenob-filer):
** a_smenob.xml
** n_smenob.xml
*** Generering: vær obs på type-attributt for noen av entryene: N+Actor og N+G3
** num_smenob.xml
** prop_smenob.xml
** v_smenob.xml
** names.xml (generers med prop_paradigms.txt)
** fillings_smenob.xml - er usikker på om vi trenger denne fila
* Skal ikke genereres bøyningsparadigme:
** adv_smenob.xml
** multiword_smenob.xml
* pron_sme.xml inneholder paradigmer 
* Tilsvarende filer i nob/ og fin/ bortsett fra pron_sme.xml og names.xml

! Leksa
# implementere funksjoner som allerede finnes i smeOahpa: n_smenob.xml, v_smenob.xml, a_smenob.xml, adv_smenob.xml, prop_smenob.xml pluss tilsvarende filer nob/ og fin/  . Dessuten semantical_sets.xml
# implementere multiword: multiword_smenob.xml og tilsvarende nob/ og fin/
# implementere tcomm
# evt. implementere swe og eng med dummies (f.eks. hus_SWE) - men dette må ikke forsinke resten av arbeidet

! MorfaS
# implementere funksjoner som allerede finnes i smeOahpa - vær obs på at i sme er det 3 stammetyper (2syll, 3syll, Csyll), i sma er det 2 for de fleste ordklassene
## substantiv:
### som i smeOAHPA: nom.pl., akkusativ, genitiv, illativ, lokativ, komitativ, essiv
### smeOahpa: lokativ istedenfor smaOahpa: elativ og inessiv
## verb: 
### som i smeOAHPA: presens, preteritum, kondisjonalis, potensialis, imperativ.  
### Dessuten perfektum og gerundium som i smaOahpa. Perfektum skal ha "lea" som kontekst.
## adjektiv:
### som i smeOAHPA, mange flere oppgavetyper enn i smaOahpa
## tallord: som i smeOAHPA. Tallord er ikke med i smaOahpa. Tallord skal ikke ha stammetypevalg. Kasus: nom.pl., akkusativ, genitiv, illativ, lokativ, komitativ. Typer: Card, Ord, Coll. Nivå 1: Sg Nivå 2: Pl
# implementere pronomener som oppgaver - kildefil er pron_sme.xml. Former med dial="NG" skal aksepteres som riktig svar, men ikke presenteres som fasit.
## __personlige__ - som i smaOahpa. Kasusvalg: akk, gen, ill, lok, kom.
## __relative__ - som i Pers. grunnform er Pron+Rel+Nom.  Kasusvalg: akk, gen, ill, lok, kom.
## __demonstrative__ - som personlige pron. Grunnform er Pron+Dem+Number+Nom. Det blir problemer i presentasjonen for brukeren med homonymi mellom Sg+Nom og Pl+Nom. Det må vi finne løsning på. Kasusvalg: akk, gen, ill, lok, kom.
## __refleksive__ - grunnform er Pron+Refl+Gen. Nominativ er ikke oppgavetype.  Kasusvalg: ill, lok, kom.
## __resiproke__ - grunnform er Pron+Recipr+Sg+Gen. Nominativ er ikke med som oppgavetype. Kasusvalg: ill, lok, kom. Disse oppgavene skal i tillegg ha kontekst, på samme måte som verb-oppgavene har det. Det finnes to typer resiproke pronomener, med og uten Px. 
## med Px
### guoibmi+Pron+Recipr+Sg+Case+PxDuNumber skal ha ''goabbat'' som kontekst
### guoibmi+Pron+Recipr+Sg+Case+PxPlNumber skal ha ''guhtet''  som kontekst
## uten Px
### nubbi+Pron+Recipr+Sg+Case skal ha ''nubbi'' som kontekst
### nubbi+Pron+Recipr+Pl+Case skal ha ''nuppit'' som kontekst



! MorfaC
# implementere funksjoner som allerede finnes i smeOahpa: substantiver, verb, adjektiver og tallord
# implementere Gerund og Perfektum som oppgavetyper for verb
# implementere pronomener som oppgavetype - Pers, Dem, Recipr, Refl, Rel

! Sahka
# implementere funksjoner som allerede finnes i smeOahpa
# installere nye dialoger - ingenting er forandra i oppsettet. Nye dialogue-filer må skrives

! Vasta
# implementere funksjoner som allerede finnes i smeOahpa
# implementere Cealkka - kildefilene  må skrives



