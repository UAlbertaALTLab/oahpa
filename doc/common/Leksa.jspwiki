Leksa needs more documentation.

!!!Background

To be included here: A list of relevant files. While waiting, [see this document|http://giellatekno.uit.no/oahpa/addlang/more.html]

!!Installation

Installation is performed via ./install.py with one option.

{{{
    ./install.py --file/-f XML
}}}

However, installation of Leksa is performed in combination with installation of Morfa-S (Morfa-B), thus a tagfile and paradigm file must be specified. For more information on this, see the Morfa-S documentation, however, the command that will typically be performed for these operations is: 

{{{
	./install.py --file XML --tagfile tags.txt --paradigmfile paradigms.txt
}}}


!!Files and classes

I'm organizing these to reflect somewhat what the structure is for dependencies and methods that call what. In Leksa (as in other games), methods and classes in views.py call objects in game.py, which call objects in forms.py

* settings.py
** INFINITIVE_SUBTRACT, INFINITIVE_ADD - settings for adding and subtracting infinitive markers; dictionaries of regular expressions.
** OLD_NEW_ISO_CODES - used in producing the corresponding language pair for the user's browser language settings. If more languages are added, this must be altered.

* conf/tools.py
** switch_language_code

* views.py
** leksa_game
** Quizzview
*** leksa_game is called, which uses Quizzview to set up a lot of common variables, and then a response is returned. This is where the browser language is checked and a game is produced based on those settings. 
*** Quizzview handles the processing of the settings form, and GET and POST data. GET is available so that outside courses can link directly to certain exercises, and in addition, Quizzview handles instantiating game.QuizzGame, and setting various template variables.
*** Docstrings and comments on these methods should explain a little more in depth

* game.py
** relax - spell relaxing, used in all games where user input is accepted in South SÃ¡mi
** QuizzGame - The whole goal of QuizzGame is to produce a LeksaForm object. To do this, it initializes variables (QuizzGame.get_db_info), and then queries the database and creates the form (QuizzGame.create_form). As QuizzGame is a subclass of Game, there are many relevant methods there, such as __init__, and new_game (called by *** Game in views.py), as well as check_game
** Docstrings and comments on these methods should explain a little more in depth

* forms.py
** LeksaSettings
** LeksaQuestion
** SEMTYPE_CHOICES - These correspond to semtypes both in semantical_sets.xml (the supersets) and one or two in the actual lexicon files.
** TRANS_CHOICES - keys representing language pairs, with 3-character ISO codes corresponding to the iso codes used in lexicon files. ZZZWWW
** GEOGRAPHY_CHOICES - Choices corresponding to lexicon files.


** templates and their inheritance structure
*** views call the farthest down template in the inheritance hierarchy, and 
    the rest are extended via the {% extends %} template tag.

{{{

templates/smaoahpa_main.html
	templates/smaoahpa.html
		smadrill/templates/game.html
			smadrill/templates/leksa.html
				smadrill/templates/leksa_place.html

}}}

