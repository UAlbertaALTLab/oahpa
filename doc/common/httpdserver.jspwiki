!!!Restarting the httpd server

On {{gtoahpa}}, {{gtweb}} and {{gtlab}}, we use nginx for serving HTML
and other applications. 

!! In case of emergencies... 

On gtoahpa, if for some reason the processes do not restart via chkconfig, 
inspect via {{ps aux}} or {{top}} to find out what is or isn't running.

Once missing processes have been identified, the proper order that all services
should be started in (given dependencies between them) is:

# mysqld
# nginx
# php-fpm
# lookupserv
# univ_oahpa / smaoahpa / rusoahpa / ...

For this use the command {{{ sudo service NAME start }}}, or alternatively
restart, if necessary.

!!Nginx (gtoahpa, gtweb, gtlab)

Updates to code do not require restarting nginx, unless updating configuration
files specifically for nginx. However, should the system reboot and nginx not 
survive this reboot, here is what you need to do: 

{{{
    sudo service nginx restart
}}}

Pay attention to the output, and trouble any errors that come up.

There have been problems with rebooting gtlab. If you after (re)starting nginx do not see the nginx test page when opening [testing.oahpa.no|http://testing.oahpa.no] then try restarting iptables as well:

{{{
    sudo service iptables restart
}}}

If for some reason the system is running slowly, inspect processes running,
using {{{top}}} or {{{htop}}}, the latter of which is a more updated and easier
to interpret tool.

!!Fastcgi processes (gtoahpa, gtlab)

Stacks using nginx also use separate processes for python, and php
applications. For __python and Django applications__, these are managed
via the package flup, and each Oahpa instance has a script checked in in its
root directory, {{{run_fastcgi.sh}}}, which stores a PID to a file to halt
old processes and start new ones.

To start oahpa fastcgi instances, one simply needs to:

{{{
	sudo ./run_fastcgi.sh
}}}

__ If running of the script results in error: __
{{{
    ./run_fastcgi.sh: line 10: kill: (332) - Ingen slik prosess
}}}

then the process id saved in the file fastcgi.pid is wrong. In such a case you need to change the file. The command
{{{
    ps -ef | grep 'fcgi'
}}}

gives you a list of all fastcgi processes. There should be 6 processes for smaoahpa and 6 processes for univ_oahpa. Check the time when the first process for univ_oahpa (alt. smaoahpa) started (the process that generates the remaining 5 processes). Write the PID of the process into the file fastcgi.pid and run the script run_fastcgi.sh again. 


__PHP applications__, Wordpress in our case, are managed by a global server process,
php-fpm. To restart this process: 

{{{
	sudo service php-fpm restart
}}}

On both gtoahpa and gtlab, univ_oahpa, smaoahpa and rusoahpa have their own
init.d scripts, so they may also be restarted via the service command, with the
usual subcommands: restart, stop, start.

{{{
    sudo service smaoahpa restart
}}}

!!Tomcat webserver (gtlab)

This is where the instances of Konteaksta are running. After upgrade of the server, as well as adding new components to Konteaksta, it is always recommended to restart Tomcat. It is also the first thing to try if Konteaksta gives "server error". To restart Tomcat:

{{{
    sudo $CATALINA_HOME/bin/shutdown.sh
    sudo $CATALINA_HOME/bin/startup.sh
}}}

For compiling and redeploying Konteaksta (if needed):

{{{
    cd /home/teaksta
    svn up
    ./make_teaksta.sh
}}}

!!Apache/httpd (victorio)

Updates to the code require restart of the httpd-server. Sometimes
updates to the localisation require that too. The restart is otherwise
harmless, but may distrub someone who is playing the came (although
that is not very probable).

Restarting the server (requires sudo rights):
{{{
sudo /etc/init.d/httpd restart
}}}


Earlier, there was a memory leak problem, which should not be among us
anymore. However if victorio is very slow, check the memory by writing:
{{{ps aux | grep http}}}

If the result indicates memory use too close to 100, this is a clear
problem indication. The answer is to restart the apache web server,
and thereafter, if need, to [restart mysqld|Mysql.html].

If the webserver takes too much memory, ou may also want to stop 
apache first, and then myql, and then starting them again:

{{{
sudo /etc/init.d/httpd stop
sudo /etc/init.d/mysqld stop
sudo /etc/init.d/httpd start
sudo /etc/init.d/mysqld start
}}}

