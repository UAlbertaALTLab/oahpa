fs = require 'fs'
util = require 'util'
wrench = require 'wrench'
{spawn} = require 'child_process'
{exec} = require 'child_process'
uglify = require "uglify-js"

# TODO: also minify stylesheet?
# TODO: include giellatekno license in compiled JS files

deps = [
  'src/bootstrap-dropdown.js'
  'src/bootstrap-tooltip.js'
  'src/bootstrap-popover.js'
  'src/DSt.js'
  'src/rangy-core.js'
  'src/jquery.neahttadigisanit.js'
]


stylesheets = [
  'src/bootstrap.custom.css'
  'src/jquery.neahttadigisanit.css'
]

appFiles = deps + stylesheets

compiledFiles = [
  'jquery.neahttadigisanit.css',
  'jquery.neahttadigisanit.js'
]

compress = (callback) ->
  util.print "\n Compressing... bin/jquery.neahttadigisanit.js\n"
  all = (fs.readFileSync 'bin/jquery.neahttadigisanit.js').toString()

  ast = uglify.parser.parse all
  out = fs.openSync "bin/jquery.neahttadigisanit.min.js", "w+"

  ast = uglify.uglify.ast_mangle ast
  ast = uglify.uglify.ast_squeeze ast

  fs.writeSync out, uglify.uglify.gen_code(ast)

  util.print "\n Minified! to jquery.neahttadigisanit.min.js\n"

concatCSS = (callback) ->
  concated = ''
  for file in stylesheets
    out = fs.readFileSync file
    concated += out
  fs.writeFileSync 'bin/jquery.neahttadigisanit.css', concated

concat = (callback) ->
  concated = ''
  for file in deps
    newF = fs.readFileSync file
    concated += newF
  fs.writeFileSync 'bin/jquery.neahttadigisanit.js', concated
  fs.unlinkSync 'src/jquery.neahttadigisanit.js'
  compress()

zipWordpress = (callback) ->
  args = [
    'zip'
    'bin/wordpress/neahttadigisanit'
    'bin/wordpress/neahttadigisanit/*'
    'bin/wordpress/neahttadigisanit/img/*'
  ]
  exec args.join(' ')

build = (callback) ->
  coffee = spawn 'coffee', ['--compile', '--bare', 'src/jquery.neahttadigisanit.coffee']
  coffee.stderr.on 'data', (data) ->
    process.stderr.write data.toString()
  coffee.stdout.on 'data', (data) ->
    util.print data.toString()
  coffee.on 'exit', (code) ->
    callback?() if code is 0
    concat()


buildChrome = (callback) ->
  pluginTargetDir = 'bin/chrome/'
  # copy to bin/chrome/

  # copy compiled files compiledFiles
  wrench.copyDirSyncRecursive('src/chrome', 'bin/chrome')

  # cp compiledFiles
  for file in compiledFiles
    _in = fs.readFileSync 'bin/' + file
    fs.writeFileSync "bin/chrome/#{file}", _in

buildWordpress = (callback) ->
  pluginTargetDir = 'bin/wordpress/'

  # copy compiled files compiledFiles
  wrench.copyDirSyncRecursive('src/wordpress', 'bin/wordpress')

  # cp compiledFiles
  for file in compiledFiles
    _in = fs.readFileSync 'bin/' + file
    fs.writeFileSync "bin/wordpress/neahttadigisanit/#{file}", _in

task 'watch', 'Watch prod source files and build changes', ->
  invoke 'build'
  util.log "Watching for changes in src"

  for file in appFiles then do (file) ->
    fs.watchFile file, (curr, prev) ->
      if +curr.mtime isnt +prev.mtime
        util.log "Saw change in #{file}"
        util.log 'Whoa. Saw a change. Building. Hold plz.'
        invoke 'build'

task 'min', 'minify compiled *.js file', ->
  exec "uglifyjs jquery.neahttadigisanit.js -o jquery.neahttadigisanit.min.js", exerr

task 'clean', 'Clean compiled files', ->
  wrench.rmdirSyncRecursive('bin/')
  wrench.mkdirSyncRecursive('bin/')

task 'build-chrome', 'Compile the chrome plugin', ->
  buildChrome()
  util.print "Everything now in bin/chrome/\n"

task 'build-wordpress', 'Compile the wordpress plugin', ->
  buildWordpress()
  zipWordpress()
  util.print "Everything now in bin/wordpress/\n, zipped version created."

task "compress", 'Uglify JS', (params)->
  compress()

task 'build', 'Compile jQuery dependencies and dictapi, and compress', ->
  build()
  concatCSS()
  util.print "Output stored to jquery.neahttadigisanit.js and jquery.neahttadigisanit.css\n"


# vim: set ts=4 sw=4 tw=0 syntax=coffee :
