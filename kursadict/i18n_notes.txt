
Using Flask-Babel which is an interface for flask to the python Babel extension

http://packages.python.org/Flask-Babel/
babel.edgewall.org

Marking translation strings in templates:
http://jinja.pocoo.org/docs/templates/#i18n-in-templates

# New locales

As with Django there is a problem that unknown locales such as sme and sma need
to be defined somewhere. Nicely, for northern sámi it seems that nordsamisk is
in existence in se.dat, se_NO.dat and se_FI.dat, but this does not help with
sørsamisk. 

Thus, we need to copy some files. First, to find out where they are, open python.
Since we're using virtualenv for this project, make sure that the local environment is enabled (e.g. `source kursadict_env/bin/activate`), and check `which python` to make sure it is active if you do not see it in the bash prompt.

Then within python, do an import to make sure we know where site-packages is

    >>> import flask
    >>> flask
    <module 'flask' from '/path/to/python2.7/site-packages/flask/__init__.pyc'>

Then, copy files within Babel:

    cp /path/to/python2.7/site-packages/babel/localedata/se.dat \
       /path/to/python2.7/site-packages/babel/localedata/sma.dat  

Thus the new locale will be able to be initialized with the init command below.

##


First generate messages.pot (.po template file)

    pybabel extract -F babel.cfg -k lazy_gettext -o messages.pot .

Then create some translations into different locales:

    pybabel init -i messages.pot -d translations -l no
    pybabel init -i messages.pot -d translations -l sma
    etc

Then compile:

    pybabel compile -d translations


Update to find new strings and automatically merge:

    pybabel update -i messages.pot -d translations





