

#   ============================ #
#!! !!!Plains Cree nehiyametan syntactic parser 
#   ============================ #


# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" "<¶>";



# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>); 
LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

LIST N = N ;
LIST V = V ;

LIST Ipc = Ipc ;
LIST Interj = Interj ;

LIST Adv = Adv ;
LIST CC = CC ;
LIST CS = CS ;
LIST Det = Det ;

LIST AN = AN ;
LIST IN = IN ;

LIST IA = IA ;
LIST II = II ;
LIST TA = TA ;
LIST TI = TI ;


LIST Cnj = Cnj ;
LIST ConNeg = ConNeg ;
LIST Cond = Cond ;
LIST Def = Def ;
LIST Del = Del ;
LIST Dem = Dem ;
LIST Dim = Dim ;
LIST Dim/Der = Dim/Der ;
LIST Dist = Dist ;
LIST Fut = Fut ;
LIST Imm = Imm ;
LIST Imp = Imp ;
LIST Incl = Incl ;
LIST Ind = Ind ;
LIST Inf = Inf ;
LIST Int = Int ;
LIST Interr = Interr ;
LIST Loc = Loc ;
LIST Med = Med ;
LIST Neg = Neg ;
LIST Num = Num ;
LIST Obv =  Obv ;
LIST Pos = Pos ;
LIST Prf = Prf ;
LIST Pron = Pron ;
LIST Prox = Prox ;
LIST Prs = Prs ;
LIST Prt = Prt ;
LIST Qst = Qst ;
LIST Sbj = Sbj ;

LIST SgO = SgO ;
LIST P2lO = P2lO ;
LIST Pl = Pl ;
LIST PlO = PlO ;
LIST 12Pl = 12Pl ;
LIST 1Pl = 1Pl ;
LIST 1PlO = 1PlO ;
LIST Sg = Sg ;
LIST 1Sg = 1Sg ;
LIST 1SgO = 1SgO ;
LIST 2Pl = 2Pl ;
LIST 2Sg = 2Sg ;
LIST 2SgO = 2SgO ;
LIST 3Pl = 3Pl ;
LIST 3PlO = 3PlO ;
LIST 3Sg = 3Sg ;
LIST 3SgO = 3SgO ;
LIST 4Pl = 4Pl ;
LIST 4PlO = 4PlO ;
LIST 4Sg = 4Sg ;
LIST 4SgO = 4SgO ;
LIST 5Sg = 5Sg ;

LIST Px12Pl = Px12Pl ;
LIST Px1Pl = Px1Pl ;
LIST Px1Sg = Px1Sg ;
LIST Px2Pl = Px2Pl ;
LIST Px2Sg = Px2Sg ;
LIST Px3Pl = Px3Pl ;
LIST Px3Sg = Px3Sg ;
LIST Px4Pl = Px4Pl ;
LIST Px4Sg = Px4Sg ;
LIST Der/Dim = Der/Dim ;


# Sets
# ====

LIST QDL = QDL ;
LIST QMRK = ? Guess ;

LIST WORD = N V Ipc Interj ;

LIST COPULA = "be" ;
LIST VFIN = (V 1Sg) (V 2Sg) (V 3Sg) (V 4Sg) (V 5Sg) (V 1Pl) (V 2Pl) (V 3Pl) (V 4Pl) (V 5Pl) ;

SET NOT-VERB = WORD - V ;
LIST NPMOD = A Det ;
SET NOT-NPMOD = WORD - NPMOD ;

LIST MORPH_NUMBER = Sg Pl ;
LIST GENDER = AN IN ;
SET NUMBERGENDER = (AN Sg) OR (AN Pl) OR (IN Sg) OR (IN PL) ;

# Noun sets

LIST HUMAN = "awâsis" "okimâw" "iyiniw" "iskwêw" ;

# Boundary sets

# Complementary set

# Case sets

# Some case, but not...

LIST COMMA = (",") ;
SET MARK =  COMMA | ("\\") | ("\;") ; #"

LIST PUNCT-LEFT = (PUNCT LEFT) ;
LIST PUNCT-RIGHT = (PUNCT RIGHT) ;
SET PRE-APP   = COMMA OR PUNCT-LEFT ;
LIST &trans = &trans ;

# Translation sets, add synonyms

LIST ANTELOPE = "apistacihkos" ;
LIST APPLE = "picikwâs" ;
LIST ARM = "mispiton" ;
LIST BACON = "kohkôsiwiyin" ;
LIST BALL = "pâkâhtowân" ;
LIST BANANA = "wâkâs" ;
LIST BANK = "sôniyâwaikamik" ; #OBS
LIST BANNOCK = "pahkwêsikan" ;
LIST BEAD = "mîkis" ;
LIST BEAR = "maskwa" ;
LIST BEAVER = "amisk" ;
LIST BEE = "âmow" ;
LIST BEER = "iskwêsisâpoy" ;
LIST BIGHORNSHEEP = "mâyatihk" ;
LIST BIRD = "piyêsîs" ;
LIST BLACKBIRD = "cahcahkâyow" ;
LIST BOIL = "sihkihp" ;
LIST BONE = "miskan" ;
LIST BOOK = "masinahikan" ;
LIST BOSS = "okimâw" ;
LIST BOWL = "wiyâkanis" ;
LIST BREAD = "pahkwêsikan" ;
LIST BUTTER = "tohtôsâpoy" ;
LIST CANADAGOOSE = "niska" ;
LIST CANOE = "ôsi" ;
LIST CARROT = "oskâtâsk" "oskâcâskos" ;
LIST CAT = "minôs" ;
LIST CATTLE = "mostoswak" ;
LIST CHAIR = "têhtapiwin" ;
LIST CHEEK = "maniway" ;
LIST CHILD = "awâsis" ;
LIST CLOCK = "pîsimohkân" ;
LIST CLOWN = "môhcohkân" ;
LIST COFFEE = "pihkahcêwâpôs" ;
LIST CORN = "mahtâmin" ;
LIST COUGAR = "pisiw" ;
LIST COUSIN = "nihciwâmis" ; #OBS
LIST CREELANGUAGE = "nêhiyawêwin" ;
LIST CROSS = "ayamihêwâhtik" ;
LIST CUP = "minihkwâcikanis" ;
LIST DAWN = "wâpan" ;
LIST DEER = "apisimôsos" ;
LIST DIAPER = "âsiyân" ;
LIST DIPPER = "kwâpahôpâkan" ;
LIST DISH = "wiyâkan" ;
LIST DOG = "atim" ;
LIST DOLL = "awâsisîhkân" ;
LIST DOLLAR = "nêwopêhikan" ;
LIST DOOR = "iskwâhtêm" ;
LIST DRUM = "mistikwaskihk" ;
LIST DUCK = "sîsîp" ;
LIST DUCKLING = "sîsîpisis" ;
LIST EAR = "mihtawakay" ;
LIST EGG = "wâwi" ;
LIST ELK = "wâwâskêsiw" ;
LIST EYE = "miskîsik" ;
LIST FACE = "mihkwâkan" ;
LIST FEATHER = "mêkwan" ;
LIST FINGERNAIL = "maskasiy" ;
LIST FIRE = "iskotêw" ;
LIST FISH = "kinosêw" ;
LIST FORK = "cîscahikanis" ;
LIST FRENCHMAN = "wêmistikôsiw" ;
LIST FROG = "ayîkis" ; 
LIST FUR = "wayân" ;
LIST GIRL = "iskwêsis" ;
LIST GLASS = "minihkwâcikan" ;
LIST GRAIN = "kistikân" ;
LIST GUM = "pikiw" ;
LIST GYM = "mêtawêwikamik" ;
LIST HAIR = "mîscakâsa" ;
LIST HAND = "micihciy" ;
LIST HAT = "astotin" ;
LIST HEAD = "mistikwân" ;
LIST HEEL = "mahkwan" ;
LIST HILL = "waciy" ;
LIST HITCH = "âniskamân" ;
LIST HOLE = "wâci" ;
LIST HOME = "wîkiwin" ;
LIST HOOF = "wayasit" ;
LIST HORN = "kitôpicikâkan" ;
LIST HORSE = "mistatim" ;
LIST HOSPITAL = "âhkosîwikamik" ;
LIST HOUR = "tipahikan" ;
LIST HOUSE = "wâskahikan" ;
LIST JACKET = "miskotâkay" ;
LIST JUICE = "sîwâpoy" ;
LIST KITTEN = "minôsis" ;
LIST KNIFE = "môhkomân" "môhkomânis" ;
LIST SMALL_KNIFE = "môhkomânis" ;
LIST LAKE = "sâkahikan" ;
LIST LEG = "miskât" ;
LIST MAN = "nâpêw" ;
LIST MEAT = "wiyâs" ;
LIST MILK = "tohtôsâpoy" ;
LIST MINUTE = "cipahikanis" ;
LIST MOOSE = "môswa" ;
LIST MORNING = "kîkisêpâ" ;
LIST MOTOR = "askihkohkân" ;
LIST MOUTH = "mitôn" ;
LIST MUSKRAT = "wacask" ;
LIST BROTHER = "-stês" ;
LIST DAUGHTER = "-tânis" ;
LIST FATHER = "-ohtâwiy" ;
LIST FRIEND = "-tôtêm" ;
LIST GRANDCHILD = "-ôsisim" ;
LIST GRANDFATHER = "môswa" ; #OBS
LIST GRANDMOTHER = "-ohkom" ;
LIST HUSBAND = "-nâpêm" ;
LIST MOTHER = "-kâwiy" ;
LIST MYPARENTS = "ninekihikwak" ; #OBS
LIST SISTER = "-mis" ;
LIST MYSON = "-kosis" ;
LIST NIPPLE = "micohcôsimis" ;
LIST NOSE = "mikot" ;
LIST NUMBER = "akihtâson" ;
LIST ORANGE-N = "osâwâs" ;
LIST OWL = "ôhow" ;
LIST PADDLE = "apoy" ;
LIST PAIL = "askihk" ;
LIST PAN = "napwên" ;
LIST PANTS = "mitâs" ;
LIST PEN = "masinahikanâhtik" ;
LIST PENCIL = "masinahikanâhtik" ;
LIST PEPPER = "papêskomina" ;
LIST PERSON = "ayisiyiniw" ;
LIST PIG = "kohkôs" ;
LIST PIN = "sakâskwahon" ;
LIST PIPE = "ospwâkan" ;
LIST POLE = "apasoyâhtik" ;
LIST POLICEMAN = "simâkan" ;
LIST POTATO = "askipwâwi" ;
LIST QUEEN = "okimâskwêw" ;
LIST RAISIN = "sôminis" ;
LIST RIBBON = "sênipân" ;
LIST RING = "âhcanis" ;
LIST RIVER = "sîpiy" ;
LIST ROAD = "mêskanaw" ;
LIST SCARF = "kîsôwahpison" ;
LIST SHOE = "maskisin" ;
LIST SHOE = "maskisin" ;
LIST SHORTS = "atâmicâsis" ;
LIST SIBLING = "nîtisân" ;
LIST SKIIDO = "sôskopayîs" ;
LIST SKIN = "masakay" ;
LIST SKUNK = "sikâk" ;
LIST SLATE = "masinahikanâpisk" ;
LIST SNAKE = "kinêpik" ;
LIST SNOWSHOE = "asâm" ;
LIST SOCK = "asikan" ;
LIST SOUP = "mîcimâpoy" ;
LIST SPOON = "êmihkwân" "êmihkwânis" ;
LIST SMALL-SPOON = "êmihkwânis" ;
LIST SPOUSE = "wîkimâkan" ;
LIST SPRUCE = "sihta" ;
LIST SQUIRREL = "anikwacâs" ;
LIST STAR = "acâhkos" ;
LIST STICK = "mistik" ;
LIST STONE = "asiniy" ;
LIST STORE = "atâwêwikamik" ;
LIST STOVE = "kotawânâpisk" ;
LIST STROLLER = "awâsisicâpânâskos" ;
LIST SUGAR = "sîwinikan" ;
LIST SUN = "pîsim" ;
LIST TEA = "maskihkîwâpoy" ;
LIST THISTLE = "masân" ;
LIST TIPI = "mîkiwâhp" ;
LIST TOBACCO = "ciscêmâs" ;
LIST TOBOGGAN = "napakâhtik" ;
LIST TOMATO = "okiniy" ;
LIST TOOTH = "mîpit" ;
LIST TOWN = "ôcênâs" ;
LIST TRAIN = "iskotêwitâpân" ;
LIST TREE = "mîtos" ;
LIST TRUCK = "âwatâswâkan" ;
LIST TUB = "mahkahk" ;
LIST VAN = "misiwêtâpânâsk" ;
LIST WAGON = "nêwokâtêw" ;
LIST WATER = "nipiy" ;
LIST WEB = "tastawasakay" ;
LIST WELFAREWORKWR = "otasahkêw" ;
LIST WHEEL = "wâsakâpayîs" ;
LIST WOMAN = "iskwêw" ;
LIST YARN = "sêstak" ;
LIST ARROW = "atos" ;
LIST BARLEY = "iskwêsisihkân" ;
LIST BEAUTIFUL = "katawasisiw" ;
LIST BIG = "misikitiw" ;
LIST BLACK = "kaskitêsiw" ;
LIST BLOW = "pôtâtam" ;
LIST BLUE = "sîpihkosiw" ;
LIST BODY = "miyaw" ;
LIST BOX = "mistikowat" ;
LIST BOY = "nâpêsis" ;
LIST BRACELET = "kiskinawâcihôkispison" ;
LIST BREAK = "pîkonam" ;
LIST BREAST = "mitohtôsim" ;
LIST BRING = "pêtâw" ;
LIST BROKEN = "mâyâtan" ;
LIST BROWN = "wîpôsâwisiw" ; #OBS
LIST CARIBOU = "atihk" ;
LIST CARRY = "tahkonam" ;
LIST CEMENT = "asinîwipayihcikan" ;
LIST CLEAN = "kanâtisiw" ;
LIST COW = "mostos" ;
LIST CRY = "mâtow" ;
LIST DELICIOUS = "wîhkitisiw" ;
LIST DIRT = "wiyipâtisiw" ;
LIST DRIVE = "otâpâsow" ;
LIST EAT = "mîcisow" ;
LIST FEEL = "itamahcihow" ;
LIST FOOT = "nisit" ;
LIST GET = "nâtam" ;
LIST GHOST = "cîpay" ;
LIST GOOD = "miywâsin" ;
LIST GOOSEBERRY = "sâpômin" ;
LIST GREEN = "askihtakosiw" ;
LIST GREY = "pihkonâkosiw" ;
LIST HIGH = "ispâw" ;
LIST MITT = "astis" ;
LIST MONEY = "sôniyâw" ;
LIST NET = "ayapiy" ;
LIST NUT = "pakân" ;
LIST ORANGE-A = "osâwisiw" ;
LIST PENNY = "pîwâpiskos" ;
LIST PIGLET = "kohkôsis" ;
LIST PINK = "wâpikwanîwinâkosiw" ;
LIST PONY = "miscacimosis" ;
LIST PUPPY = "acimosis" ;
LIST PURPLE = "wîpisîpihkosiw" ;
LIST RABBIT = "wâpos" ;
LIST RED = "mihkosiw" ;
LIST RESTAURANT = "mîcisowikamik" ;
LIST SALT = "sîwîhtâkan" ;
LIST SHORT = "cimisisiw" ;
LIST SMALL = "apisîsisiw" ;
LIST SNOW = "kôna" ;
LIST STRONG = "maskawisîw" ;
LIST TALL = "kinosiw" "kinwâw" ;
LIST UGLY = "mâyâtisiw" "mâyâtan" ;
LIST WART = "micîhcîkom" ;
LIST WHITE = "wâpiskisiw" "wâpiskâw" ;
LIST WINERED = "watôkimihkosiw" "watôkimihkwâw" ;
LIST YELLOW = "wâposâwisiw" "wâposâwâw" ;


# Here come the rules #

BEFORE-SECTIONS 

SECTION

# looking for typos
MAP (&err-typo) TARGET QMRK (*-1 QDL) ;

# looking for incorrect translation, error tag mapped to the English word
MAP (&err-translationNoun) TARGET N IF (0 ("shoe"))(*1 QDL LINK NOT *1 SHOE) ; 
SELECT N IF (0 SHOE LINK *-1 ("^qdl") LINK *-1 ("shoes")) ; 

MAP (&err-translationNoun) TARGET N IF (0 ("knife"))(*1 QDL LINK NOT *1 KNIFE) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("spoon"))(*1 QDL LINK NOT *1 SPOON) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("bread"))(*1 QDL LINK NOT *1 BREAD) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("sugar"))(*1 QDL LINK NOT *1 SUGAR) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("carrot"))(*1 QDL LINK NOT *1 CARROT) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("dog"))(*1 QDL LINK NOT *1 DOG) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("man"))(*1 QDL LINK NOT *1 MAN) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("woman"))(*1 QDL LINK NOT *1 WOMAN) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("cat"))(*1 QDL LINK NOT *1 CAT) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("fish"))(*1 QDL LINK NOT *1 FISH) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("meat"))(*1 QDL LINK NOT *1 MEAT) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("bacon"))(*1 QDL LINK NOT *1 BACON) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("milk"))(*1 QDL LINK NOT *1 MILK) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("store"))(*1 QDL LINK NOT *1 STORE) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("egg"))(*1 QDL LINK NOT *1 EGG) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("chair"))(*1 QDL LINK NOT *1 CHAIR) ; 
MAP (&err-translationNoun) TARGET N IF (0 ("potato"))(*1 QDL LINK NOT *1 POTATO) ; 



# looking for incorrect word order, error tag mapped to QDL
MAP (&err-DemShouldBeforetheNoun) TARGET QDL IF (*-1 N LINK -1 Dem)(1 N LINK 1 Dem) ; 
MAP (&err-DemShouldbeAfterNoun) TARGET QDL IF (*-1 N LINK *-1 COPULA BARRIER NOT-NPMOD LINK -1 Dem)(1 Dem LINK 1 N) ; 

# looking for incorrect number or distance, error tag mapped to the English Det
LIST DemDistance = Med Prox ;
LIST DemNumber = Sg Pl ;

#MAP (&err-numberShouldAgree) TARGET Dem IF (0 $$DemNumber)(*1 QDL LINK NOT *1 $$DemNumber) ; 
MAP (&err-NotCorrectTypeofDem) TARGET Dem IF (0 $$DemDistance)(*-1 QDL LINK NOT *-1 $$DemDistance) ; 

# looking for incorrect morphosyntax, , error tag mapped to the Cree Det
MAP (&err-animacyIN) TARGET Dem IF (0 (Dem AN))((-1 (N IN)) OR (1 (N IN))) ; 
MAP (&err-animacyAN) TARGET Dem IF (0 (Dem IN))((-1 (N AN)) OR (1 (N AN))) ; 
MAP (&err-numberShouldAgree) TARGET Dem IF (0 $$DemNumber)(NOT 1 $$DemNumber)(NOT -1 $$DemNumber)(NOT *1 QDL) ; 



AFTER-SECTIONS 

# messages:
# &err-typo: Is there an incorrect spelled word in your translation? 
# &err-translationNoun: Is the noun translated correctly?
# &err-DemShouldBeforetheNoun: The demonstrative pronoun should come before the noun.
# &err-DemShouldbeAfterNoun The demonstrative pronoun should come after the noun.
# &err-numberShouldAgree: The demonstrative pronoun must agree in number with the noun.
# &err-NotCorrectTypeofDem: Did you write the correct type of demonstrative pronoun?
# &err-animacyIN: An inanimate noun needs an inanimate demonstrative pronoun.
# &err-animacyAN: An animate noun needs an animate demonstrative pronoun.


END
